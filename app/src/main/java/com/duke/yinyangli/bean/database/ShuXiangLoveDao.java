package com.duke.yinyangli.bean.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "shuxianglove".
*/
public class ShuXiangLoveDao extends AbstractDao<ShuXiangLove, Long> {

    public static final String TABLENAME = "shuxianglove";

    /**
     * Properties of entity ShuXiangLove.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "id");
        public final static Property Shengxiao1 = new Property(1, String.class, "shengxiao1", false, "shengxiao1");
        public final static Property Shengxiao2 = new Property(2, String.class, "shengxiao2", false, "shengxiao2");
        public final static Property Title = new Property(3, String.class, "title", false, "title");
        public final static Property Content1 = new Property(4, String.class, "content1", false, "content1");
        public final static Property Content11 = new Property(5, String.class, "content11", false, "content11");
        public final static Property Content2 = new Property(6, String.class, "content2", false, "content2");
        public final static Property Content22 = new Property(7, String.class, "content22", false, "content22");
    }


    public ShuXiangLoveDao(DaoConfig config) {
        super(config);
    }
    
    public ShuXiangLoveDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ShuXiangLove entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String shengxiao1 = entity.getShengxiao1();
        if (shengxiao1 != null) {
            stmt.bindString(2, shengxiao1);
        }
 
        String shengxiao2 = entity.getShengxiao2();
        if (shengxiao2 != null) {
            stmt.bindString(3, shengxiao2);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(4, title);
        }
 
        String content1 = entity.getContent1();
        if (content1 != null) {
            stmt.bindString(5, content1);
        }
 
        String content11 = entity.getContent11();
        if (content11 != null) {
            stmt.bindString(6, content11);
        }
 
        String content2 = entity.getContent2();
        if (content2 != null) {
            stmt.bindString(7, content2);
        }
 
        String content22 = entity.getContent22();
        if (content22 != null) {
            stmt.bindString(8, content22);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ShuXiangLove entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String shengxiao1 = entity.getShengxiao1();
        if (shengxiao1 != null) {
            stmt.bindString(2, shengxiao1);
        }
 
        String shengxiao2 = entity.getShengxiao2();
        if (shengxiao2 != null) {
            stmt.bindString(3, shengxiao2);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(4, title);
        }
 
        String content1 = entity.getContent1();
        if (content1 != null) {
            stmt.bindString(5, content1);
        }
 
        String content11 = entity.getContent11();
        if (content11 != null) {
            stmt.bindString(6, content11);
        }
 
        String content2 = entity.getContent2();
        if (content2 != null) {
            stmt.bindString(7, content2);
        }
 
        String content22 = entity.getContent22();
        if (content22 != null) {
            stmt.bindString(8, content22);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ShuXiangLove readEntity(Cursor cursor, int offset) {
        ShuXiangLove entity = new ShuXiangLove( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // shengxiao1
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // shengxiao2
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // title
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // content1
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // content11
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // content2
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7) // content22
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ShuXiangLove entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setShengxiao1(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShengxiao2(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTitle(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setContent1(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setContent11(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setContent2(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setContent22(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ShuXiangLove entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ShuXiangLove entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ShuXiangLove entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
