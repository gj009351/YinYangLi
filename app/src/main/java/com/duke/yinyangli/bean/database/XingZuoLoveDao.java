package com.duke.yinyangli.bean.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "xingzuolove".
*/
public class XingZuoLoveDao extends AbstractDao<XingZuoLove, Void> {

    public static final String TABLENAME = "xingzuolove";

    /**
     * Properties of entity XingZuoLove.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Xingzuo1 = new Property(0, String.class, "xingzuo1", false, "xingzuo1");
        public final static Property Xingzuo2 = new Property(1, String.class, "xingzuo2", false, "xingzuo2");
        public final static Property Title = new Property(2, String.class, "title", false, "title");
        public final static Property Content1 = new Property(3, String.class, "content1", false, "content1");
        public final static Property Content2 = new Property(4, String.class, "content2", false, "content2");
    }


    public XingZuoLoveDao(DaoConfig config) {
        super(config);
    }
    
    public XingZuoLoveDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, XingZuoLove entity) {
        stmt.clearBindings();
 
        String xingzuo1 = entity.getXingzuo1();
        if (xingzuo1 != null) {
            stmt.bindString(1, xingzuo1);
        }
 
        String xingzuo2 = entity.getXingzuo2();
        if (xingzuo2 != null) {
            stmt.bindString(2, xingzuo2);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(3, title);
        }
 
        String content1 = entity.getContent1();
        if (content1 != null) {
            stmt.bindString(4, content1);
        }
 
        String content2 = entity.getContent2();
        if (content2 != null) {
            stmt.bindString(5, content2);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, XingZuoLove entity) {
        stmt.clearBindings();
 
        String xingzuo1 = entity.getXingzuo1();
        if (xingzuo1 != null) {
            stmt.bindString(1, xingzuo1);
        }
 
        String xingzuo2 = entity.getXingzuo2();
        if (xingzuo2 != null) {
            stmt.bindString(2, xingzuo2);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(3, title);
        }
 
        String content1 = entity.getContent1();
        if (content1 != null) {
            stmt.bindString(4, content1);
        }
 
        String content2 = entity.getContent2();
        if (content2 != null) {
            stmt.bindString(5, content2);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public XingZuoLove readEntity(Cursor cursor, int offset) {
        XingZuoLove entity = new XingZuoLove( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // xingzuo1
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // xingzuo2
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // title
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // content1
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // content2
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, XingZuoLove entity, int offset) {
        entity.setXingzuo1(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setXingzuo2(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTitle(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setContent1(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setContent2(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(XingZuoLove entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(XingZuoLove entity) {
        return null;
    }

    @Override
    public boolean hasKey(XingZuoLove entity) {
        // TODO
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
